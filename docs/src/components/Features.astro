---
import { Image } from 'astro:assets'
import 'swiper/css'
import 'swiper/css/effect-coverflow'
import Icon from '../assets/icon.svg'

type Feature = {
    icon: string,
    title: string,
    description: string
}

const features = [
    {
        title: 'Lorem Ipsum',
        description: 'Blazing fast, adds around ~3ms on top of StyleSheet*',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'Share up to 100% of your styles across platforms in monorepo',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'Doesn’t introduce new components',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'Supports custom breakpoints and css-like media queries',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'Access theme in your StyleSheets and components',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'Supports dynamic functions to access values from JSX',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'Compatible with Expo, Expo Go, Bare React Native and React Native Web',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'No 3rd party dependencies',
        icon: ''
    },
    {
        title: 'Lorem Ipsum',
        description: 'Doesn’t introduce new components',
        icon: ''
    }
] satisfies Array<Feature>
---

<section>
    <h2>Features</h2>
    <section class="swiper features-container">
        <div class="swiper-wrapper features">
            {features.map((feature) => (
                <div class="feature swiper-slide">
                    <Image class="feature__icon" src={Icon} alt="" />
                    <h3 class="feature__title">{feature.title}</h3>
                    <p class="feature__description">
                        {feature.description}
                    </p>
                </div>
            ))}
        </div>
    </section>
</section>

<style>
    h2 {
        font-weight: 700;
        font-size: 40px;
        margin: 37vw 0 100px 0;
        text-align: center;
    }

    .features-container {
        width: 100%;
    }

    .features {
        display: flex;

        @media (min-width: 1025px) {
            visibility: visible!important;
            padding: 0 20px!important;
            margin: 0 auto!important;
            flex-wrap: wrap;
            justify-content: center;
            margin: 0 auto;
            max-width: 1600px;
            gap: 48px;
        }
    }

    .feature {
        display: flex;
        flex-direction: column;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.2);
        border-radius: 24px;
        gap: 12px;
        text-align: center;
        padding: 40px 26px;
        height: auto!important;

        @media (min-width: 1025px) {
            width: 30%;
            min-width: 460px;
            padding: 32px;
        }

        &__title {
            font-size: 24px;
            font-weight: 700;
        }

        &__description {
            font-size: 24px;
            line-height: 32px;
            font-weight: 500;
        }
    }
</style>

<script>
    const matchTablet = window.matchMedia('(min-width: 700px) and (max-width: 1024px)')
    const matchMobile = window.matchMedia('(max-width: 700px)')
    let disposeCarousel = () => {}

    const handleMedia = async () => {
        disposeCarousel()

        if (!matchTablet.matches && !matchMobile.matches) {
            return
        }

        const { init } = await import('../carousel')

        disposeCarousel = init(matchTablet.matches)
    }

    matchTablet.addEventListener('change', handleMedia)
    handleMedia()
</script>
